<Window x:Class="VDC_WPF_T.NewPetWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:VDC_WPF_T.Windows.AddPet"
        xmlns:authwins="clr-namespace:VDC_WPF_T.Windows.AuthWindow"
        mc:Ignorable="d"
        Title="NewPetWindow" Height="1024" Width="1440" WindowStartupLocation="CenterScreen" MinWidth="1024" MinHeight="900" WindowState="Maximized">


    <Window.Resources>
        <SolidColorBrush x:Key="StandardBorderBrush" Color="#FFFFBFBF" />
        <SolidColorBrush x:Key="StandardBackgroundBrush" Color="#FFFF7600" />
        <SolidColorBrush x:Key="HoverBorderBrush" Color="#FF801919" />
        <SolidColorBrush x:Key="SelectedBackgroundBrush" Color="#FF97FF84" />
        <SolidColorBrush x:Key="SelectedForegroundBrush" Color="#FF188FE4" />
        <SolidColorBrush x:Key="DisabledForegroundBrush" Color="Red" />
        <SolidColorBrush x:Key="GlyphBrush" Color="#FFFB00FF" />
        <SolidColorBrush x:Key="NormalBrush" Color="#FF66123C" />
        <SolidColorBrush x:Key="NormalBorderBrush" Color="#FF79ECFF" />
        <SolidColorBrush x:Key="HorizontalNormalBrush" Color="LightSeaGreen" />
        <SolidColorBrush x:Key="HorizontalNormalBorderBrush" Color="#FF10FF00" />

        <LinearGradientBrush x:Key="ListBoxBackgroundBrush" StartPoint="0,0" EndPoint="1,0.001">
            <GradientBrush.GradientStops>
                <GradientStopCollection>
                    <GradientStop Color="White" Offset="0.0" />
                    <GradientStop Color="White" Offset="0.6" />
                    <GradientStop Color="#DDDDDD" Offset="1.2"/>
                </GradientStopCollection>
            </GradientBrush.GradientStops>
        </LinearGradientBrush>
        <LinearGradientBrush x:Key="StandardBrush" StartPoint="0,0" EndPoint="0,1">
            <GradientBrush.GradientStops>
                <GradientStopCollection>
                    <GradientStop Color="#FFF" Offset="0.0"/>
                    <GradientStop Color="#CCC" Offset="1.0"/>
                </GradientStopCollection>
            </GradientBrush.GradientStops>
        </LinearGradientBrush>
        <LinearGradientBrush x:Key="PressedBrush" StartPoint="0,0" EndPoint="0,1">
            <GradientBrush.GradientStops>
                <GradientStopCollection>
                    <GradientStop Color="#BBB" Offset="0.0"/>
                    <GradientStop Color="#EEE" Offset="0.1"/>
                    <GradientStop Color="#EEE" Offset="0.9"/>
                    <GradientStop Color="#FFF" Offset="1.0"/>
                </GradientStopCollection>
            </GradientBrush.GradientStops>
        </LinearGradientBrush>

        <Style x:Key="ScrollBarLineButton" TargetType="{x:Type RepeatButton}">
            <Setter Property="Visibility" Value="Hidden"/>
            <Setter Property="SnapsToDevicePixels" Value="True"/>
            <Setter Property="OverridesDefaultStyle" Value="true"/>
            <Setter Property="Focusable" Value="false"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type RepeatButton}">
                        <Border Name="Border" Margin="1" CornerRadius="2" Background="{StaticResource NormalBrush}" BorderBrush="{StaticResource NormalBorderBrush}" BorderThickness="1">
                            <Path HorizontalAlignment="Center" VerticalAlignment="Center" Fill="{StaticResource GlyphBrush}" Data="{Binding Path=Content, RelativeSource={RelativeSource TemplatedParent}}" />
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter TargetName="Border" Property="Background" Value="{StaticResource PressedBrush}" />
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Foreground" Value="{StaticResource DisabledForegroundBrush}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="ScrollBarPageButton" TargetType="{x:Type RepeatButton}">
            <Setter Property="Visibility" Value="Hidden"/>
            <Setter Property="SnapsToDevicePixels" Value="True"/>
            <Setter Property="OverridesDefaultStyle" Value="true"/>
            <Setter Property="IsTabStop" Value="false"/>
            <Setter Property="Focusable" Value="false"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type RepeatButton}">
                        <Border Background="Black" />
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="ScrollBarThumb" TargetType="{x:Type Thumb}">
            <Setter Property="SnapsToDevicePixels" Value="True"/>
            <Setter Property="OverridesDefaultStyle" Value="true"/>
            <Setter Property="IsTabStop" Value="false"/>
            <Setter Property="Focusable" Value="false"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Thumb}">
                        <Border CornerRadius="10" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="0"  Width="16" Margin="8,0,-2,0"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <ControlTemplate x:Key="VerticalScrollBar" TargetType="{x:Type ScrollBar}">
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition MaxHeight="0"/>
                    <RowDefinition Height="0.00001*"/>
                    <RowDefinition MaxHeight="0"/>
                </Grid.RowDefinitions>
                <Border Grid.RowSpan="3" CornerRadius="10" Background="Transparent" />
                <RepeatButton Grid.Row="0" Style="{StaticResource ScrollBarLineButton}" Height="18" Command="ScrollBar.LineUpCommand" Content="M 0 4 L 8 4 L 4 0 Z" />
                <Track Name="PART_Track" Grid.Row="1" IsDirectionReversed="true">
                    <Track.DecreaseRepeatButton>
                        <RepeatButton Style="{StaticResource ScrollBarPageButton}" Command="ScrollBar.PageUpCommand" />
                    </Track.DecreaseRepeatButton>
                    <Track.Thumb>
                        <Thumb Style="{StaticResource ScrollBarThumb}" Margin="1,0,1,0" Background="{StaticResource HorizontalNormalBrush}" BorderBrush="{StaticResource HorizontalNormalBorderBrush}" />
                    </Track.Thumb>
                    <Track.IncreaseRepeatButton>
                        <RepeatButton Style="{StaticResource ScrollBarPageButton}" Command="ScrollBar.PageDownCommand" />
                    </Track.IncreaseRepeatButton>
                </Track>
                <RepeatButton Grid.Row="3" Style="{StaticResource ScrollBarLineButton}" Height="18" Command="ScrollBar.LineDownCommand" Content="M 0 0 L 4 4 L 8 0 Z"/>
            </Grid>
        </ControlTemplate>
        <ControlTemplate x:Key="HorizontalScrollBar" TargetType="{x:Type ScrollBar}">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition MaxWidth="18"/>
                    <ColumnDefinition Width="0.00001*"/>
                    <ColumnDefinition MaxWidth="18"/>
                </Grid.ColumnDefinitions>
                <Border Grid.ColumnSpan="3" CornerRadius="2" Background="#F0F0F0"/>
                <RepeatButton Grid.Column="0"  Style="{StaticResource ScrollBarLineButton}" Width="18" Command="ScrollBar.LineLeftCommand" Content="M 4 0 L 4 8 L 0 4 Z" />
                <Track Name="PART_Track" Grid.Column="1" IsDirectionReversed="False">
                    <Track.DecreaseRepeatButton>
                        <RepeatButton Style="{StaticResource ScrollBarPageButton}" Command="ScrollBar.PageLeftCommand" />
                    </Track.DecreaseRepeatButton>
                    <Track.Thumb>
                        <Thumb Style="{StaticResource ScrollBarThumb}" Margin="0,1,0,1" Background="{StaticResource NormalBrush}" BorderBrush="{StaticResource NormalBorderBrush}" />
                    </Track.Thumb>
                    <Track.IncreaseRepeatButton>
                        <RepeatButton Style="{StaticResource ScrollBarPageButton}" Command="ScrollBar.PageRightCommand" />
                    </Track.IncreaseRepeatButton>
                </Track>
                <RepeatButton Grid.Column="3" Style="{StaticResource ScrollBarLineButton}" Width="18" Command="ScrollBar.LineRightCommand" Content="M 0 0 L 4 4 L 0 8 Z"/>
            </Grid>
        </ControlTemplate>
        <Style x:Key="{x:Type ScrollBar}" TargetType="{x:Type ScrollBar}">
            <Setter Property="SnapsToDevicePixels" Value="True"/>
            <Setter Property="OverridesDefaultStyle" Value="true"/>
            <Style.Triggers>
                <Trigger Property="Orientation" Value="Horizontal">
                    <Setter Property="Width" Value="Auto"/>
                    <Setter Property="Height" Value="18" />
                    <Setter Property="Template" Value="{StaticResource HorizontalScrollBar}" />
                </Trigger>
                <Trigger Property="Orientation" Value="Vertical">
                    <Setter Property="Width" Value="24"/>
                    <Setter Property="Height" Value="Auto" />
                    <Setter Property="Template" Value="{StaticResource VerticalScrollBar}" />
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="FavsScrollViewer" TargetType="{x:Type ScrollViewer}">
            <Setter Property="OverridesDefaultStyle" Value="True"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ScrollViewer}">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition/>
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition/>
                                <RowDefinition Height="Auto"/>
                            </Grid.RowDefinitions>
                            <ScrollContentPresenter Grid.Column="1"/>
                            <ScrollBar Name="PART_VerticalScrollBar" Value="{TemplateBinding VerticalOffset}" Maximum="{TemplateBinding ScrollableHeight}" ViewportSize="{TemplateBinding ViewportHeight}" Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}"/>
                            <ScrollBar Name="PART_HorizontalScrollBar" Orientation="Horizontal" Grid.Row="1" Grid.Column="1" Value="{TemplateBinding HorizontalOffset}" Maximum="{TemplateBinding ScrollableWidth}" ViewportSize="{TemplateBinding ViewportWidth}" Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}"/>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Window.Resources>


    <Grid Background="#EBEBEB">

        <Grid.RowDefinitions>
            <RowDefinition Height="60"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>

        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*" MaxWidth="200" />
            <ColumnDefinition Width="*" MinWidth="1024"/>
            <ColumnDefinition Width="*" MaxWidth="200"/>

        </Grid.ColumnDefinitions>

        <Rectangle Grid.Row="0" Fill="LightSeaGreen" Grid.ColumnSpan="3"/>
        <TextBlock Grid.Row="0" Text="Ветеринарная диагностическая клиника &quot;Умка&quot;" VerticalAlignment="Center" HorizontalAlignment="Center" TextAlignment="Center" FontSize="20" FontFamily="./Resources/montserrat-regular.ttf" Grid.ColumnSpan="3" Foreground="White"/>
        
        <Ellipse Height="200" Width="200" Grid.Row="1" Stroke="Black" Stretch="UniformToFill" RenderOptions.BitmapScalingMode="HighQuality" Grid.Column="1" HorizontalAlignment="Left" VerticalAlignment="Top" Margin="69,112,0,0" MouseUp="AddPic_MouseUp">
            <Ellipse.Fill>
                <VisualBrush>
                    <VisualBrush.Visual>
                        <MediaElement MediaEnded="gif_MediaEnded" UnloadedBehavior="Manual" Source="{Binding PicSource}" LoadedBehavior="Play"/>
                    </VisualBrush.Visual>
                </VisualBrush>
            </Ellipse.Fill>
        </Ellipse>
        <StackPanel Grid.Row="1" Grid.Column="1" Orientation="Horizontal" HorizontalAlignment="Center" Margin="0,20,0,10">
            <TextBlock Text="Основная информация о пациенте:" FontSize="36"/>
        </StackPanel>
        <Grid Grid.Column="1" 
                 Grid.Row="1" 
                 VerticalAlignment="Top"
                 HorizontalAlignment="Stretch"
                 Margin="336,85,64,0" 
                 >
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>

            <StackPanel Grid.Row="1" Margin="15" >

                <local:OwnerSelectionControl/>
                <authwins:RegAuthInputControl Placeholder="Кличка" x:Name="nameInput"/>
                <authwins:RegAuthInputControl Placeholder="Вид" x:Name="typeInput"/>
                <authwins:RegAuthInputControl Placeholder="Пол" x:Name="sexInput"/>
                <authwins:RegAuthInputControl Placeholder="Возраст" x:Name="ageInput"/>
                <authwins:RegAuthInputControl Placeholder="Порода" x:Name="breedInput"/>
                <authwins:RegAuthInputControl Placeholder="Вес" x:Name="weightInput"/>
                <authwins:RegAuthInputControl Placeholder="Номер микрочипа" x:Name="numMicInput"/>

            </StackPanel>
        </Grid>
        <StackPanel Grid.Row="2" Grid.Column="1" Orientation="Horizontal" HorizontalAlignment="Center" Margin="0,10,0,10">
            <Button Grid.Column="2" 
            Height="38" 
            Width="250" 
            Content="Добавить" 
            Background="LightSeaGreen" 
            FontSize="15" 
            FontFamily="./Resources/montserrat-regular.ttf" 
            BorderBrush="LightSeaGreen" 
            HorizontalAlignment="Center" 
            VerticalAlignment="Top" 
            Foreground="White" 
             Margin="0,10,0,0" Click="Add_Click">
                <Button.Resources>
                    <Style TargetType="{x:Type Border}">
                        <Setter Property="CornerRadius" Value="8"/>
                    </Style>
                </Button.Resources>
            </Button>
            <Button Grid.Column="2" 
            Height="38" 
            Width="250" 
            Content="Отмена" 
            Background="#9A9A9A" 
            FontSize="15" 
            FontFamily="./Resources/montserrat-regular.ttf" 
            BorderBrush="#9A9A9A" 
            HorizontalAlignment="Center" 
            VerticalAlignment="Top" 
            Foreground="White" 
             Margin="20,10,0,10" Click="Close_Click">
                <Button.Resources>
                    <Style TargetType="{x:Type Border}">
                        <Setter Property="CornerRadius" Value="8"/>
                    </Style>
                </Button.Resources>
            </Button>
        </StackPanel>

        <!--
        <Button Grid.Column="1" Height="48" Content="Добавить нового пациента" Background="LightSeaGreen" FontSize="15" FontFamily="./Resources/montserrat-regular.ttf" BorderBrush="LightSeaGreen" VerticalAlignment="Top" Foreground="White" Margin="64,740,64,0" Grid.Row="1" Click="AddNewPet_Click" d:IsHidden="True" >
            <Button.Resources>
                <Style TargetType="{x:Type Border}">
                    <Setter Property="CornerRadius" Value="10"/>
                </Style>
            </Button.Resources>
        </Button>
        
        <Grid Grid.Column="1" 
                 Grid.Row="1" 
                 VerticalAlignment="Top"
                 HorizontalAlignment="Stretch"
                 Margin="336,85,64,0" 
                 Height="160" d:IsHidden="True">

            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="17"/>
            </Grid.ColumnDefinitions>
            <Border
                Grid.Column="0"
                 Grid.Row="1" 
                 VerticalAlignment="Top"
                 Height="155" Background="White" Grid.ColumnSpan="4">
                <Border.Resources>
                    <Style TargetType="{x:Type Border}">
                        <Setter Property="CornerRadius" Value="10"/>
                    </Style>

                </Border.Resources>
            </Border>

            <TextBlock IsHitTestVisible="False"  HorizontalAlignment="Left" Margin="10,20,0,0" Foreground="Black" FontFamily="./Resources/montserrat-regular.ttf" FontSize="20" Grid.Column="0"><Run Language="ru-ru" Text="Основная информация о владельце"/></TextBlock>

            <Button Grid.Column="2" 
                Height="41" 
                Width="207" 
                Content="Редактировать" 
                Background="LightSeaGreen" 
                FontSize="15" 
                FontFamily="./Resources/montserrat-regular.ttf" 
                BorderBrush="LightSeaGreen" 
                HorizontalAlignment="Center" 
                VerticalAlignment="Top" 
                Foreground="White" 
                 Margin="0,100,0,0" Click="Button_Click_3">
                <Button.Resources>
                    <Style TargetType="{x:Type Border}">
                        <Setter Property="CornerRadius" Value="10"/>
                    </Style>
                </Button.Resources>
            </Button>
        </Grid>


        <Grid Grid.Column="1" 
      Grid.Row="1" 
      VerticalAlignment="Top"
      HorizontalAlignment="Stretch"
      Margin="64,310,64,0" 
      Height="95" d:IsHidden="True">


            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="133*"/>
                <ColumnDefinition Width="330*"/>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="17"/>
            </Grid.ColumnDefinitions>

            <Border Grid.Column="0" 
            VerticalAlignment="Center"
            Height="90" 
            Background="White" 
            Grid.ColumnSpan="4"
            Margin="0,0,0,10">
                <Border.Resources>
                    <Style TargetType="{x:Type Border}">
                        <Setter Property="CornerRadius" Value="10"/>
                    </Style>
                </Border.Resources>
            </Border>

            <TextBlock IsHitTestVisible="False" 
              
               HorizontalAlignment="Left" 
               Margin="10,20,0,0" 
               Foreground="Black" 
               FontFamily="./Resources/montserrat-regular.ttf" 
               FontSize="20" 
               Grid.Column="0" 
               Grid.ColumnSpan="2">
        <Run Language="ru-ru" Text="История здоровья"/>
            </TextBlock>

            <Button Grid.Column="2" 
            Height="41" 
            Width="207" 
            Content="Редактировать" 
            Background="LightSeaGreen" 
            FontSize="15" 
            FontFamily="./Resources/montserrat-regular.ttf" 
            BorderBrush="LightSeaGreen" 
            HorizontalAlignment="Center" 
            VerticalAlignment="Top" 
            Foreground="White" 
             Margin="0,20,0,0" Click="EditHistory_Click">
                <Button.Resources>
                    <Style TargetType="{x:Type Border}">
                        <Setter Property="CornerRadius" Value="10"/>
                    </Style>
                </Button.Resources>
            </Button>
        </Grid>

        <Grid Grid.Column="1" 
        Grid.Row="1" 
        VerticalAlignment="Top"
        HorizontalAlignment="Stretch"
        Margin="64,420,64,0" 
        Height="95" d:IsHidden="True">


            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="133*"/>
                <ColumnDefinition Width="330*"/>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="17"/>
            </Grid.ColumnDefinitions>

            <Border Grid.Column="0" 
          VerticalAlignment="Center"
          Height="90" 
          Background="White" 
          Grid.ColumnSpan="4"
          Margin="0,0,0,10">
                <Border.Resources>
                    <Style TargetType="{x:Type Border}">
                        <Setter Property="CornerRadius" Value="10"/>
                    </Style>
                </Border.Resources>
            </Border>

            <TextBlock IsHitTestVisible="False" 
        
             HorizontalAlignment="Left" 
             Margin="10,20,0,0" 
             Foreground="Black" 
             FontFamily="./Resources/montserrat-regular.ttf" 
             FontSize="20" 
             Grid.Column="0" 
             Grid.ColumnSpan="2">
      <Run Language="ru-ru" Text="Текущее состояние здоровья"/>
            </TextBlock>

            <Button Grid.Column="2" 
          Height="41" 
          Width="207" 
          Content="Редактировать" 
          Background="LightSeaGreen" 
          FontSize="15" 
          FontFamily="./Resources/montserrat-regular.ttf" 
          BorderBrush="LightSeaGreen" 
          HorizontalAlignment="Center" 
          VerticalAlignment="Top" 
          Foreground="White" 
           Margin="0,20,0,0" Click="EditHealthState_Click">
                <Button.Resources>
                    <Style TargetType="{x:Type Border}">
                        <Setter Property="CornerRadius" Value="10"/>
                    </Style>
                </Button.Resources>
            </Button>
        </Grid>

        <Grid Grid.Column="1" 
          Grid.Row="1" 
          VerticalAlignment="Top"
          HorizontalAlignment="Stretch"
          Margin="64,530,64,0" 
          Height="95" d:IsHidden="True">


            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="133*"/>
                <ColumnDefinition Width="330*"/>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="17"/>
            </Grid.ColumnDefinitions>

            <Border Grid.Column="0" 
            VerticalAlignment="Center"
            Height="90" 
            Background="White" 
            Grid.ColumnSpan="4"
            Margin="0,0,0,10">
                        <Border.Resources>
                            <Style TargetType="{x:Type Border}">
                                <Setter Property="CornerRadius" Value="10"/>
                            </Style>
                        </Border.Resources>
                    </Border>

                    <TextBlock IsHitTestVisible="False" 
  
               HorizontalAlignment="Left" 
               Margin="10,20,0,0" 
               Foreground="Black" 
               FontFamily="./Resources/montserrat-regular.ttf" 
               FontSize="20" 
               Grid.Column="0" 
               Grid.ColumnSpan="2">
        <Run Language="ru-ru" Text="Диагностические данные"/>
            </TextBlock>

            <Button Grid.Column="2" 
            Height="41" 
            Width="207" 
            Content="Редактировать" 
            Background="LightSeaGreen" 
            FontSize="15" 
            FontFamily="./Resources/montserrat-regular.ttf" 
            BorderBrush="LightSeaGreen" 
            HorizontalAlignment="Center" 
            VerticalAlignment="Top" 
            Foreground="White" 
             Margin="0,20,0,0" Click="EditDiagnostic_Click">
                <Button.Resources>
                    <Style TargetType="{x:Type Border}">
                        <Setter Property="CornerRadius" Value="10"/>
                    </Style>
                </Button.Resources>
            </Button>
        </Grid>

        <Grid Grid.Column="1" 
      Grid.Row="1" 
      VerticalAlignment="Top"
      HorizontalAlignment="Stretch"
      Margin="64,640,64,0" 
      Height="95" d:IsHidden="True">


            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="133*"/>
                <ColumnDefinition Width="330*"/>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="17"/>
            </Grid.ColumnDefinitions>

            <Border Grid.Column="0" 
        VerticalAlignment="Center"
        Height="90" 
        Background="White" 
        Grid.ColumnSpan="4"
        Margin="0,0,0,10">
                <Border.Resources>
                    <Style TargetType="{x:Type Border}">
                        <Setter Property="CornerRadius" Value="10"/>
                    </Style>
                </Border.Resources>
            </Border>

            <TextBlock IsHitTestVisible="False" 
  
       HorizontalAlignment="Left" 
       Margin="10,20,0,0" 
       Foreground="Black" 
       FontFamily="./Resources/montserrat-regular.ttf" 
       FontSize="20" 
       Grid.Column="0" 
        Grid.ColumnSpan="2">
    <Run Language="ru-ru" Text="План лечения"/>
            </TextBlock>

            <Button Grid.Column="2" 
        Height="41" 
        Width="207" 
        Content="Редактировать" 
        Background="LightSeaGreen" 
        FontSize="15" 
        FontFamily="./Resources/montserrat-regular.ttf" 
        BorderBrush="LightSeaGreen" 
        HorizontalAlignment="Center" 
        VerticalAlignment="Top" 
        Foreground="White" 
         Margin="0,20,0,0" Click="EditTreatmentPlan_Click">
                <Button.Resources>
                    <Style TargetType="{x:Type Border}">
                        <Setter Property="CornerRadius" Value="10"/>
                    </Style>
                </Button.Resources>
            </Button>
        </Grid>-->

    </Grid>
</Window>
